!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADC_PORT	i2c-io.cpp	349;"	d	file:
ADC_PORT	uart-io.cpp	168;"	d	file:
ARDUINO_H	arduino.h	9;"	d
ARRAY_LEN	i2c-io.cpp	311;"	d	file:
ARRAY_LEN	uart-io.cpp	132;"	d	file:
AVRINFO_H	Common/AvrInfo.h	25;"	d
AVRINFO_H	Shared/AvrInfo.h	24;"	d
AVR_ATMEGA_128_BOOT_SIZE	Common/AvrInfo.h	115;"	d
AVR_ATMEGA_128_BOOT_SIZE	Shared/AvrInfo.h	105;"	d
AVR_ATMEGA_128_EEPROM_SIZE	Common/AvrInfo.h	116;"	d
AVR_ATMEGA_128_FLASH_SIZE	Common/AvrInfo.h	114;"	d
AVR_ATMEGA_128_FLASH_SIZE	Shared/AvrInfo.h	104;"	d
AVR_ATMEGA_128_PAGE_SHIFT	Common/AvrInfo.h	117;"	d
AVR_ATMEGA_128_PAGE_SHIFT	Shared/AvrInfo.h	106;"	d
AVR_ATMEGA_128_PAGE_SIZE	Common/AvrInfo.h	118;"	d
AVR_ATMEGA_128_PAGE_SIZE	Shared/AvrInfo.h	107;"	d
AVR_ATMEGA_128_SIGNATURE	Common/AvrInfo.h	113;"	d
AVR_ATMEGA_128_SIGNATURE	Shared/AvrInfo.h	103;"	d
AVR_ATMEGA_128_STRING	Common/AvrInfo.h	112;"	d
AVR_ATMEGA_128_STRING	Shared/AvrInfo.h	102;"	d
AVR_ATMEGA_168_BOOT_SIZE	Common/AvrInfo.h	83;"	d
AVR_ATMEGA_168_BOOT_SIZE	Shared/AvrInfo.h	77;"	d
AVR_ATMEGA_168_EEPROM_SIZE	Common/AvrInfo.h	84;"	d
AVR_ATMEGA_168_FLASH_SIZE	Common/AvrInfo.h	82;"	d
AVR_ATMEGA_168_FLASH_SIZE	Shared/AvrInfo.h	76;"	d
AVR_ATMEGA_168_PAGE_SHIFT	Common/AvrInfo.h	85;"	d
AVR_ATMEGA_168_PAGE_SHIFT	Shared/AvrInfo.h	78;"	d
AVR_ATMEGA_168_PAGE_SIZE	Common/AvrInfo.h	86;"	d
AVR_ATMEGA_168_PAGE_SIZE	Shared/AvrInfo.h	79;"	d
AVR_ATMEGA_168_SIGNATURE	Common/AvrInfo.h	81;"	d
AVR_ATMEGA_168_SIGNATURE	Shared/AvrInfo.h	75;"	d
AVR_ATMEGA_168_STRING	Common/AvrInfo.h	80;"	d
AVR_ATMEGA_168_STRING	Shared/AvrInfo.h	74;"	d
AVR_ATMEGA_169_BOOT_SIZE	Common/AvrInfo.h	91;"	d
AVR_ATMEGA_169_BOOT_SIZE	Shared/AvrInfo.h	84;"	d
AVR_ATMEGA_169_EEPROM_SIZE	Common/AvrInfo.h	92;"	d
AVR_ATMEGA_169_FLASH_SIZE	Common/AvrInfo.h	90;"	d
AVR_ATMEGA_169_FLASH_SIZE	Shared/AvrInfo.h	83;"	d
AVR_ATMEGA_169_PAGE_SHIFT	Common/AvrInfo.h	93;"	d
AVR_ATMEGA_169_PAGE_SHIFT	Shared/AvrInfo.h	85;"	d
AVR_ATMEGA_169_PAGE_SIZE	Common/AvrInfo.h	94;"	d
AVR_ATMEGA_169_PAGE_SIZE	Shared/AvrInfo.h	86;"	d
AVR_ATMEGA_169_SIGNATURE	Common/AvrInfo.h	89;"	d
AVR_ATMEGA_169_SIGNATURE	Shared/AvrInfo.h	82;"	d
AVR_ATMEGA_169_STRING	Common/AvrInfo.h	88;"	d
AVR_ATMEGA_169_STRING	Shared/AvrInfo.h	81;"	d
AVR_ATMEGA_16_BOOT_SIZE	Common/AvrInfo.h	75;"	d
AVR_ATMEGA_16_BOOT_SIZE	Shared/AvrInfo.h	70;"	d
AVR_ATMEGA_16_EEPROM_SIZE	Common/AvrInfo.h	76;"	d
AVR_ATMEGA_16_FLASH_SIZE	Common/AvrInfo.h	74;"	d
AVR_ATMEGA_16_FLASH_SIZE	Shared/AvrInfo.h	69;"	d
AVR_ATMEGA_16_PAGE_SHIFT	Common/AvrInfo.h	77;"	d
AVR_ATMEGA_16_PAGE_SHIFT	Shared/AvrInfo.h	71;"	d
AVR_ATMEGA_16_PAGE_SIZE	Common/AvrInfo.h	78;"	d
AVR_ATMEGA_16_PAGE_SIZE	Shared/AvrInfo.h	72;"	d
AVR_ATMEGA_16_SIGNATURE	Common/AvrInfo.h	73;"	d
AVR_ATMEGA_16_SIGNATURE	Shared/AvrInfo.h	68;"	d
AVR_ATMEGA_16_STRING	Common/AvrInfo.h	72;"	d
AVR_ATMEGA_16_STRING	Shared/AvrInfo.h	67;"	d
AVR_ATMEGA_32_BOOT_SIZE	Common/AvrInfo.h	99;"	d
AVR_ATMEGA_32_BOOT_SIZE	Shared/AvrInfo.h	91;"	d
AVR_ATMEGA_32_EEPROM_SIZE	Common/AvrInfo.h	100;"	d
AVR_ATMEGA_32_FLASH_SIZE	Common/AvrInfo.h	98;"	d
AVR_ATMEGA_32_FLASH_SIZE	Shared/AvrInfo.h	90;"	d
AVR_ATMEGA_32_PAGE_SHIFT	Common/AvrInfo.h	101;"	d
AVR_ATMEGA_32_PAGE_SHIFT	Shared/AvrInfo.h	92;"	d
AVR_ATMEGA_32_PAGE_SIZE	Common/AvrInfo.h	102;"	d
AVR_ATMEGA_32_PAGE_SIZE	Shared/AvrInfo.h	93;"	d
AVR_ATMEGA_32_SIGNATURE	Common/AvrInfo.h	97;"	d
AVR_ATMEGA_32_SIGNATURE	Shared/AvrInfo.h	89;"	d
AVR_ATMEGA_32_STRING	Common/AvrInfo.h	96;"	d
AVR_ATMEGA_32_STRING	Shared/AvrInfo.h	88;"	d
AVR_ATMEGA_48_BOOT_SIZE	Common/AvrInfo.h	51;"	d
AVR_ATMEGA_48_BOOT_SIZE	Shared/AvrInfo.h	49;"	d
AVR_ATMEGA_48_EEPROM_SIZE	Common/AvrInfo.h	52;"	d
AVR_ATMEGA_48_FLASH_SIZE	Common/AvrInfo.h	50;"	d
AVR_ATMEGA_48_FLASH_SIZE	Shared/AvrInfo.h	48;"	d
AVR_ATMEGA_48_PAGE_SHIFT	Common/AvrInfo.h	53;"	d
AVR_ATMEGA_48_PAGE_SHIFT	Shared/AvrInfo.h	50;"	d
AVR_ATMEGA_48_PAGE_SIZE	Common/AvrInfo.h	54;"	d
AVR_ATMEGA_48_PAGE_SIZE	Shared/AvrInfo.h	51;"	d
AVR_ATMEGA_48_SIGNATURE	Common/AvrInfo.h	49;"	d
AVR_ATMEGA_48_SIGNATURE	Shared/AvrInfo.h	47;"	d
AVR_ATMEGA_48_STRING	Common/AvrInfo.h	48;"	d
AVR_ATMEGA_48_STRING	Shared/AvrInfo.h	46;"	d
AVR_ATMEGA_64_BOOT_SIZE	Common/AvrInfo.h	107;"	d
AVR_ATMEGA_64_BOOT_SIZE	Shared/AvrInfo.h	98;"	d
AVR_ATMEGA_64_EEPROM_SIZE	Common/AvrInfo.h	108;"	d
AVR_ATMEGA_64_FLASH_SIZE	Common/AvrInfo.h	106;"	d
AVR_ATMEGA_64_FLASH_SIZE	Shared/AvrInfo.h	97;"	d
AVR_ATMEGA_64_PAGE_SHIFT	Common/AvrInfo.h	109;"	d
AVR_ATMEGA_64_PAGE_SHIFT	Shared/AvrInfo.h	99;"	d
AVR_ATMEGA_64_PAGE_SIZE	Common/AvrInfo.h	110;"	d
AVR_ATMEGA_64_PAGE_SIZE	Shared/AvrInfo.h	100;"	d
AVR_ATMEGA_64_SIGNATURE	Common/AvrInfo.h	105;"	d
AVR_ATMEGA_64_SIGNATURE	Shared/AvrInfo.h	96;"	d
AVR_ATMEGA_64_STRING	Common/AvrInfo.h	104;"	d
AVR_ATMEGA_64_STRING	Shared/AvrInfo.h	95;"	d
AVR_ATMEGA_88_BOOT_SIZE	Common/AvrInfo.h	67;"	d
AVR_ATMEGA_88_BOOT_SIZE	Shared/AvrInfo.h	63;"	d
AVR_ATMEGA_88_EEPROM_SIZE	Common/AvrInfo.h	68;"	d
AVR_ATMEGA_88_FLASH_SIZE	Common/AvrInfo.h	66;"	d
AVR_ATMEGA_88_FLASH_SIZE	Shared/AvrInfo.h	62;"	d
AVR_ATMEGA_88_PAGE_SHIFT	Common/AvrInfo.h	69;"	d
AVR_ATMEGA_88_PAGE_SHIFT	Shared/AvrInfo.h	64;"	d
AVR_ATMEGA_88_PAGE_SIZE	Common/AvrInfo.h	70;"	d
AVR_ATMEGA_88_PAGE_SIZE	Shared/AvrInfo.h	65;"	d
AVR_ATMEGA_88_SIGNATURE	Common/AvrInfo.h	65;"	d
AVR_ATMEGA_88_SIGNATURE	Shared/AvrInfo.h	61;"	d
AVR_ATMEGA_88_STRING	Common/AvrInfo.h	64;"	d
AVR_ATMEGA_88_STRING	Shared/AvrInfo.h	60;"	d
AVR_ATMEGA_8_BOOT_SIZE	Common/AvrInfo.h	59;"	d
AVR_ATMEGA_8_BOOT_SIZE	Shared/AvrInfo.h	56;"	d
AVR_ATMEGA_8_EEPROM_SIZE	Common/AvrInfo.h	60;"	d
AVR_ATMEGA_8_FLASH_SIZE	Common/AvrInfo.h	58;"	d
AVR_ATMEGA_8_FLASH_SIZE	Shared/AvrInfo.h	55;"	d
AVR_ATMEGA_8_PAGE_SHIFT	Common/AvrInfo.h	61;"	d
AVR_ATMEGA_8_PAGE_SHIFT	Shared/AvrInfo.h	57;"	d
AVR_ATMEGA_8_PAGE_SIZE	Common/AvrInfo.h	62;"	d
AVR_ATMEGA_8_PAGE_SIZE	Shared/AvrInfo.h	58;"	d
AVR_ATMEGA_8_SIGNATURE	Common/AvrInfo.h	57;"	d
AVR_ATMEGA_8_SIGNATURE	Shared/AvrInfo.h	54;"	d
AVR_ATMEGA_8_STRING	Common/AvrInfo.h	56;"	d
AVR_ATMEGA_8_STRING	Shared/AvrInfo.h	53;"	d
AVR_BOOT_SIZE	Common/AvrInfo.h	172;"	d
AVR_BOOT_SIZE	Shared/AvrInfo.h	159;"	d
AVR_EEPROM_SIZE	Common/AvrInfo.h	173;"	d
AVR_ENTRY	Common/AvrInfo.c	33;"	d	file:
AVR_ENTRY	Shared/AvrInfo.c	33;"	d	file:
AVR_FLASH_SIZE	Common/AvrInfo.h	171;"	d
AVR_FLASH_SIZE	Shared/AvrInfo.h	158;"	d
AVR_PAGE_SHIFT	Common/AvrInfo.h	174;"	d
AVR_PAGE_SHIFT	Shared/AvrInfo.h	160;"	d
AVR_PAGE_SIZE	Common/AvrInfo.h	175;"	d
AVR_PAGE_SIZE	Shared/AvrInfo.h	161;"	d
AVR_PART_BOOT_SIZE2	Common/AvrInfo.h	164;"	d
AVR_PART_BOOT_SIZE2	Shared/AvrInfo.h	152;"	d
AVR_PART_BOOT_SIZE	Common/AvrInfo.h	123;"	d
AVR_PART_BOOT_SIZE	Shared/AvrInfo.h	112;"	d
AVR_PART_EEPROM_SIZE2	Common/AvrInfo.h	165;"	d
AVR_PART_EEPROM_SIZE	Common/AvrInfo.h	124;"	d
AVR_PART_FLASH_SIZE2	Common/AvrInfo.h	163;"	d
AVR_PART_FLASH_SIZE2	Shared/AvrInfo.h	151;"	d
AVR_PART_FLASH_SIZE	Common/AvrInfo.h	122;"	d
AVR_PART_FLASH_SIZE	Shared/AvrInfo.h	111;"	d
AVR_PART_NUM	Common/AvrInfo.h	131;"	d
AVR_PART_NUM	Common/AvrInfo.h	134;"	d
AVR_PART_NUM	Common/AvrInfo.h	137;"	d
AVR_PART_NUM	Common/AvrInfo.h	140;"	d
AVR_PART_NUM	Common/AvrInfo.h	143;"	d
AVR_PART_NUM	Common/AvrInfo.h	146;"	d
AVR_PART_NUM	Common/AvrInfo.h	149;"	d
AVR_PART_NUM	Common/AvrInfo.h	152;"	d
AVR_PART_NUM	Common/AvrInfo.h	155;"	d
AVR_PART_NUM	Shared/AvrInfo.h	119;"	d
AVR_PART_NUM	Shared/AvrInfo.h	122;"	d
AVR_PART_NUM	Shared/AvrInfo.h	125;"	d
AVR_PART_NUM	Shared/AvrInfo.h	128;"	d
AVR_PART_NUM	Shared/AvrInfo.h	131;"	d
AVR_PART_NUM	Shared/AvrInfo.h	134;"	d
AVR_PART_NUM	Shared/AvrInfo.h	137;"	d
AVR_PART_NUM	Shared/AvrInfo.h	140;"	d
AVR_PART_NUM	Shared/AvrInfo.h	143;"	d
AVR_PART_PAGE_SHIFT2	Common/AvrInfo.h	166;"	d
AVR_PART_PAGE_SHIFT2	Shared/AvrInfo.h	153;"	d
AVR_PART_PAGE_SHIFT	Common/AvrInfo.h	125;"	d
AVR_PART_PAGE_SHIFT	Shared/AvrInfo.h	113;"	d
AVR_PART_PAGE_SIZE2	Common/AvrInfo.h	167;"	d
AVR_PART_PAGE_SIZE2	Shared/AvrInfo.h	154;"	d
AVR_PART_PAGE_SIZE	Common/AvrInfo.h	126;"	d
AVR_PART_PAGE_SIZE	Shared/AvrInfo.h	114;"	d
AVR_PART_SIGNATURE2	Common/AvrInfo.h	162;"	d
AVR_PART_SIGNATURE2	Shared/AvrInfo.h	150;"	d
AVR_PART_SIGNATURE	Common/AvrInfo.h	121;"	d
AVR_PART_SIGNATURE	Shared/AvrInfo.h	110;"	d
AVR_PART_STRING2	Common/AvrInfo.h	161;"	d
AVR_PART_STRING2	Shared/AvrInfo.h	149;"	d
AVR_PART_STRING	Common/AvrInfo.h	120;"	d
AVR_PART_STRING	Shared/AvrInfo.h	109;"	d
AVR_SIGNATURE	Common/AvrInfo.h	170;"	d
AVR_SIGNATURE	Shared/AvrInfo.h	157;"	d
AVR_STRING	Common/AvrInfo.h	169;"	d
AVR_STRING	Shared/AvrInfo.h	156;"	d
AllowADC_t	i2c-io.cpp	/^} AllowADC_t;$/;"	t	typeref:enum:__anon14	file:
AllowADC_t	uart-io.cpp	/^} AllowADC_t;$/;"	t	typeref:enum:__anon8	file:
AllowADC	i2c-io.cpp	/^    AllowADC,$/;"	e	enum:__anon14	file:
AllowADC	uart-io.cpp	/^    AllowADC,$/;"	e	enum:__anon8	file:
Arduino	arduino.h	/^class Arduino : DriverSerial {$/;"	c
Arduino	arduino.cpp	/^Arduino::Arduino() {$/;"	f	class:Arduino
Arduino	arduino.cpp	/^Arduino::Arduino(const Arduino& orig) {$/;"	f	class:Arduino
AvrInfo_t	Common/AvrInfo.h	/^} AvrInfo_t;$/;"	t	typeref:struct:__anon2
AvrInfo_t	Shared/AvrInfo.h	/^} AvrInfo_t;$/;"	t	typeref:struct:__anon27
BAUDRATE	uart-io.cpp	208;"	d	file:
BL_ADDR_MASK	Shared/BootLoader.h	59;"	d
BL_API_MIN_VERSION	Shared/BootLoader.h	77;"	d
BL_API_VERSION	Shared/BootLoader.h	68;"	d
BL_Addr_t	Shared/BootLoader.h	/^} BL_Addr_t;$/;"	t	typeref:union:__anon18
BL_CMD_REBOOT	Shared/BootLoader.h	189;"	d
BL_CMD_RUN_APP	Shared/BootLoader.h	179;"	d
BL_CMD_TEST_CALL	Shared/BootLoader.h	242;"	d
BL_CMD_TEST_NOTIFY	Shared/BootLoader.h	243;"	d
BL_CMD_TEST_READ	Shared/BootLoader.h	240;"	d
BL_CMD_TEST_WRITE	Shared/BootLoader.h	241;"	d
BL_DEFAULT_BOOT_DELAY	Shared/BootLoader.h	229;"	d
BL_DEFAULT_I2C_ADDR	Shared/BootLoader.h	221;"	d
BL_MAX_DATA_BYTES	Shared/BootLoader.h	86;"	d
BL_MEM_TYPE_EEPROM	Shared/BootLoader.h	132;"	d
BL_MEM_TYPE_FLASH	Shared/BootLoader.h	130;"	d
BL_MEM_TYPE_MASK	Shared/BootLoader.h	129;"	d
BL_MEM_TYPE_SRAM	Shared/BootLoader.h	131;"	d
BL_NODE_NAME_LEN	Shared/BootLoader.h	202;"	d
BL_REG_BASE	Shared/BootLoader.h	88;"	d
BL_REG_GET_INFO	Shared/BootLoader.h	99;"	d
BL_REG_READ_DATA	Shared/BootLoader.h	144;"	d
BL_REG_WRITE_DATA	Shared/BootLoader.h	163;"	d
BL_TEST_CMDS	Shared/BootLoader.h	236;"	d
BOOTLOADER_API_H	Common/BootLoader-api.h	25;"	d
BOOTLOADER_H	Shared/BootLoader.h	32;"	d
BootLoaderCheckVersion	Common/BootLoader-api.c	/^int BootLoaderCheckVersion( const BootLoaderInfo_t *bootInfo )$/;"	f
BootLoaderEepromData_t	Shared/BootLoader.h	/^} BootLoaderEepromData_t;$/;"	t	typeref:struct:__anon22
BootLoaderGetBootDelay	Common/BootLoader-api.c	/^int BootLoaderGetBootDelay( int i2cDev, const BootLoaderInfo_t *bootInfo, uint8_t *bootDelay )$/;"	f
BootLoaderGetI2cAddr	Common/BootLoader-api.c	/^int BootLoaderGetI2cAddr( int i2cDev, const BootLoaderInfo_t *bootInfo, I2C_Addr_t *i2cAddr )$/;"	f
BootLoaderGetInfo	Common/BootLoader-api.c	/^int BootLoaderGetInfo( int i2cDev, BootLoaderInfo_t *bootInfo )$/;"	f
BootLoaderGetNodeName	Common/BootLoader-api.c	/^int BootLoaderGetNodeName( int i2cDev, const BootLoaderInfo_t *bootInfo, char *nodeName )$/;"	f
BootLoaderGlobals_t	Shared/BootLoader.h	/^} BootLoaderGlobals_t;$/;"	t	typeref:struct:__anon23
BootLoaderInfo_t	Shared/BootLoader.h	/^} BootLoaderInfo_t;$/;"	t	typeref:struct:__anon19
BootLoaderPrintInfo	Common/BootLoader-api.c	/^void BootLoaderPrintInfo( const BootLoaderInfo_t *bootInfo, int verbose )$/;"	f
BootLoaderRead_t	Shared/BootLoader.h	/^} BootLoaderRead_t;$/;"	t	typeref:struct:__anon20
BootLoaderRead	Common/BootLoader-api.c	/^int BootLoaderRead( int i2cDev, uint8_t memType, uint32_t memAddr, uint8_t numBytes, void *readBuf )$/;"	f
BootLoaderReboot	Common/BootLoader-api.c	/^int BootLoaderReboot( int i2cDev )$/;"	f
BootLoaderRunProgram	Common/BootLoader-api.c	/^int BootLoaderRunProgram( int i2cDev )$/;"	f
BootLoaderSetBootDelay	Common/BootLoader-api.c	/^int BootLoaderSetBootDelay( int i2cDev, const BootLoaderInfo_t *bootInfo, uint8_t bootDelay )$/;"	f
BootLoaderSetI2cAddr	Common/BootLoader-api.c	/^int BootLoaderSetI2cAddr( int i2cDev, const BootLoaderInfo_t *bootInfo, I2C_Addr_t i2cAddr )$/;"	f
BootLoaderSetNodeName	Common/BootLoader-api.c	/^int BootLoaderSetNodeName( int i2cDev, const BootLoaderInfo_t *bootInfo, const char *nodeName )$/;"	f
BootLoaderSetStructSize	Common/BootLoader-api.c	/^int BootLoaderSetStructSize( int i2cDev, const BootLoaderInfo_t *bootInfo )$/;"	f
BootLoaderWrite_t	Shared/BootLoader.h	/^} BootLoaderWrite_t;$/;"	t	typeref:struct:__anon21
BootLoaderWrite	Common/BootLoader-api.c	/^int BootLoaderWrite( int i2cDev, uint8_t memType, uint32_t memAddr, uint8_t numBytes, void *writeBuf )$/;"	f
CAPITAL_HEX	Shared/StrPrintf.c	/^	CAPITAL_HEX     = 0x08  \/**< Did we encounter %X?                       *\/$/;"	e	enum:__anon15	file:
CFG_CRC8BLOCK	Config.h	36;"	d
CFG_LOG_ENABLED	Shared/Log.h	62;"	d
CFG_LOG_TO_BUFFER	Config.h	34;"	d
CFG_LOG_USE_STDIO	Shared/Log.h	41;"	d
CLIENTDUMMY_H	clientdummy.h	9;"	d
CMD_DEFAULT	i2c-io.cpp	/^    CMD_DEFAULT,$/;"	e	enum:__anon10	file:
CMD_DEFAULT	uart-io.cpp	/^    CMD_DEFAULT,$/;"	e	enum:__anon5	file:
CMD_GET_DIR	i2c-io.cpp	/^    CMD_GET_DIR,$/;"	e	enum:__anon10	file:
CMD_GET_DIR	uart-io.cpp	/^    CMD_GET_DIR,$/;"	e	enum:__anon5	file:
CMD_GET_DIST	uart-io.cpp	/^    CMD_GET_DIST,$/;"	e	enum:__anon5	file:
CMD_GET_GIRO	uart-io.cpp	/^    CMD_GET_GIRO,$/;"	e	enum:__anon5	file:
CMD_GET	i2c-io.cpp	/^    CMD_GET,$/;"	e	enum:__anon10	file:
CMD_GET	uart-io.cpp	/^    CMD_GET,$/;"	e	enum:__anon5	file:
CMD_INFO	i2c-io.cpp	/^    CMD_INFO,$/;"	e	enum:__anon10	file:
CMD_INFO	uart-io.cpp	/^    CMD_INFO,$/;"	e	enum:__anon5	file:
CMD_READ_REG	i2c-io.cpp	/^    CMD_READ_REG,$/;"	e	enum:__anon10	file:
CMD_READ_REG	uart-io.cpp	/^    CMD_READ_REG,$/;"	e	enum:__anon5	file:
CMD_SET_DIR	i2c-io.cpp	/^    CMD_SET_DIR,$/;"	e	enum:__anon10	file:
CMD_SET_DIR	uart-io.cpp	/^    CMD_SET_DIR,$/;"	e	enum:__anon5	file:
CMD_SET	i2c-io.cpp	/^    CMD_SET,$/;"	e	enum:__anon10	file:
CMD_SET	uart-io.cpp	/^    CMD_SET,$/;"	e	enum:__anon5	file:
CMD_WHEEL_L	uart-io.cpp	/^    CMD_WHEEL_L,$/;"	e	enum:__anon5	file:
CMD_WHEEL_R	uart-io.cpp	/^    CMD_WHEEL_R,$/;"	e	enum:__anon5	file:
CMD_WRITE_REG	i2c-io.cpp	/^    CMD_WRITE_REG,$/;"	e	enum:__anon10	file:
CMD_WRITE_REG	uart-io.cpp	/^    CMD_WRITE_REG,$/;"	e	enum:__anon5	file:
CONFIG_H	Config.h	24;"	d
CRC_H	Shared/Crc8.h	25;"	d
ClearOption	Shared/StrPrintf.c	93;"	d	file:
Crc8Block	Shared/Crc8.c	/^uint8_t Crc8Block( uint8_t crc, uint8_t *data, uint8_t len )$/;"	f
Crc8	Shared/Crc8.c	/^unsigned char Crc8( unsigned char inCrc, unsigned char inData )$/;"	f
DEBUG	msp.cpp	20;"	d	file:
DELAY_H	Shared/Delay.h	24;"	d
DUMPMEM_H	Shared/DumpMem.h	24;"	d
DefaultLogFunc	Shared/Log.c	/^void DefaultLogFunc( int logLevel, const char *fmt, va_list args )$/;"	f
DriverSerial	driverSerial.h	/^class DriverSerial$/;"	c
DriverSerial	driverSerial.cpp	/^DriverSerial::DriverSerial() {}$/;"	f	class:DriverSerial
DumpMem	Shared/DumpMem.c	/^void DumpMem( const char *prefix, unsigned address, const void *inData, unsigned numBytes )$/;"	f
ExecutiveProcessor	executive.h	/^class ExecutiveProcessor : public ProcessorInterface {$/;"	c
ExecutiveProcessor	executive.h	/^    ExecutiveProcessor() : ProcessorInterface() {$/;"	f	class:ExecutiveProcessor
FALSE	Common/BootLoader-api.c	43;"	d	file:
FALSE	Common/i2c-io-api.c	38;"	d	file:
FALSE	i2c-io.cpp	340;"	d	file:
FALSE	uart-io.cpp	160;"	d	file:
FILE_Addr_t	Common/FILE_Parser.h	/^typedef uint32_t    FILE_Addr_t;$/;"	t
FILE_BLOCK_SIZE	Common/FILE_Data.h	33;"	d
FILE_BlockLen_t	Common/FILE_Data.h	/^typedef uint32_t    FILE_BlockLen_t;$/;"	t
FILE_Block_s	Common/FILE_Data.h	/^struct FILE_Block_s$/;"	s
FILE_Block_t	Common/FILE_Data.h	/^typedef struct FILE_Block_s FILE_Block_t;$/;"	t	typeref:struct:FILE_Block_s
FILE_DATA_H	Common/FILE_Data.h	24;"	d
FILE_Data_t	Common/FILE_Data.h	/^} FILE_Data_t;$/;"	t	typeref:struct:__anon3
FILE_FreeData	Common/FILE_Data.c	/^void FILE_FreeData( FILE_Data_t *fileData )$/;"	f
FILE_LineNum_t	Common/FILE_Parser.h	/^typedef unsigned    FILE_LineNum_t;$/;"	t
FILE_PARSER_H	Common/FILE_Parser.h	24;"	d
FILE_ParsedData_t	Common/FILE_Parser.h	/^} FILE_ParsedData_t;$/;"	t	typeref:struct:__anon1
FILE_ParsedLen_t	Common/FILE_Parser.h	/^typedef uint8_t     FILE_ParsedLen_t;$/;"	t
FILE_ParserCallback_s	Common/FILE_Parser.h	/^struct FILE_ParserCallback_s$/;"	s
FILE_ParserCallback_t	Common/FILE_Parser.h	/^typedef struct  FILE_ParserCallback_s   FILE_ParserCallback_t;$/;"	t	typeref:struct:FILE_ParserCallback_s
FILE_ReadData	Common/FILE_Data.c	/^FILE_Data_t *FILE_ReadData( const char *fileName )$/;"	f
FILE_SegmentLen_t	Common/FILE_Parser.h	/^typedef uint32_t    FILE_SegmentLen_t;$/;"	t
FindAvrInfoBySignature	Common/AvrInfo.c	/^const AvrInfo_t *FindAvrInfoBySignature( uint16_t signature )$/;"	f
FindAvrInfoBySignature	Shared/AvrInfo.c	/^const AvrInfo_t *FindAvrInfoBySignature( uint16_t signature )$/;"	f
FinishSegment	Common/FILE_Parser.h	/^    int (*FinishSegment)( void *userData, FILE_Addr_t addr, FILE_SegmentLen_t segLen );$/;"	m	struct:FILE_ParserCallback_s
FmtOption	Shared/StrPrintf.c	/^} FmtOption;$/;"	t	typeref:enum:__anon15	file:
GPS_STEPS	executive.h	/^    int GPS_STEPS;$/;"	m	class:ExecutiveProcessor
GetFromMSP	uart-io.cpp	/^void GetFromMSP(char* rec, int len, int uartDev) {$/;"	f
I2C_API_H	Common/i2c-api.h	25;"	d
I2C_Addr_t	Shared/i2c.h	/^typedef uint8_t I2C_Addr_t;$/;"	t
I2C_CRC	Shared/i2c.h	83;"	d
I2C_CRC	Shared/i2c.h	85;"	d
I2C_Data_t	Shared/i2c.h	/^} I2C_Data_t;$/;"	t	typeref:struct:__anon36
I2C_ERROR_ADDR_NACK	Shared/i2c.h	55;"	d
I2C_ERROR_ARBITRATION_LOST	Shared/i2c.h	57;"	d
I2C_ERROR_BAD_CRC	Shared/i2c.h	59;"	d
I2C_ERROR_BAD_LEN	Shared/i2c.h	58;"	d
I2C_ERROR_BUS_ERROR	Shared/i2c.h	60;"	d
I2C_ERROR_DATA_NACK	Shared/i2c.h	56;"	d
I2C_ERROR_NONE	Shared/i2c.h	54;"	d
I2C_Error_t	Shared/i2c.h	/^typedef int8_t  I2C_Error_t;$/;"	t
I2C_FUNCS	Common/i2c-dev.h	165;"	d
I2C_FUNC_10BIT_ADDR	Common/i2c-dev.h	53;"	d
I2C_FUNC_I2C	Common/i2c-dev.h	52;"	d
I2C_FUNC_PROTOCOL_MANGLING	Common/i2c-dev.h	54;"	d
I2C_FUNC_SMBUS_BLOCK_DATA_PEC	Common/i2c-dev.h	90;"	d
I2C_FUNC_SMBUS_BLOCK_DATA	Common/i2c-dev.h	84;"	d
I2C_FUNC_SMBUS_BLOCK_PROC_CALL_PEC	Common/i2c-dev.h	59;"	d
I2C_FUNC_SMBUS_BLOCK_PROC_CALL	Common/i2c-dev.h	60;"	d
I2C_FUNC_SMBUS_BYTE_DATA_PEC	Common/i2c-dev.h	100;"	d
I2C_FUNC_SMBUS_BYTE_DATA	Common/i2c-dev.h	80;"	d
I2C_FUNC_SMBUS_BYTE_PEC	Common/i2c-dev.h	99;"	d
I2C_FUNC_SMBUS_BYTE	Common/i2c-dev.h	78;"	d
I2C_FUNC_SMBUS_EMUL	Common/i2c-dev.h	102;"	d
I2C_FUNC_SMBUS_HWPEC_CALC	Common/i2c-dev.h	55;"	d
I2C_FUNC_SMBUS_I2C_BLOCK_2	Common/i2c-dev.h	88;"	d
I2C_FUNC_SMBUS_I2C_BLOCK	Common/i2c-dev.h	86;"	d
I2C_FUNC_SMBUS_PROC_CALL_PEC	Common/i2c-dev.h	58;"	d
I2C_FUNC_SMBUS_PROC_CALL	Common/i2c-dev.h	68;"	d
I2C_FUNC_SMBUS_QUICK	Common/i2c-dev.h	61;"	d
I2C_FUNC_SMBUS_READ_BLOCK_DATA_PEC	Common/i2c-dev.h	75;"	d
I2C_FUNC_SMBUS_READ_BLOCK_DATA	Common/i2c-dev.h	69;"	d
I2C_FUNC_SMBUS_READ_BYTE_DATA_PEC	Common/i2c-dev.h	97;"	d
I2C_FUNC_SMBUS_READ_BYTE_DATA	Common/i2c-dev.h	64;"	d
I2C_FUNC_SMBUS_READ_BYTE_PEC	Common/i2c-dev.h	95;"	d
I2C_FUNC_SMBUS_READ_BYTE	Common/i2c-dev.h	62;"	d
I2C_FUNC_SMBUS_READ_I2C_BLOCK_2	Common/i2c-dev.h	73;"	d
I2C_FUNC_SMBUS_READ_I2C_BLOCK	Common/i2c-dev.h	71;"	d
I2C_FUNC_SMBUS_READ_WORD_DATA_PEC	Common/i2c-dev.h	56;"	d
I2C_FUNC_SMBUS_READ_WORD_DATA	Common/i2c-dev.h	66;"	d
I2C_FUNC_SMBUS_WORD_DATA_PEC	Common/i2c-dev.h	92;"	d
I2C_FUNC_SMBUS_WORD_DATA	Common/i2c-dev.h	82;"	d
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC	Common/i2c-dev.h	76;"	d
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA	Common/i2c-dev.h	70;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_DATA_PEC	Common/i2c-dev.h	98;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_DATA	Common/i2c-dev.h	65;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_PEC	Common/i2c-dev.h	96;"	d
I2C_FUNC_SMBUS_WRITE_BYTE	Common/i2c-dev.h	63;"	d
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK_2	Common/i2c-dev.h	74;"	d
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	Common/i2c-dev.h	72;"	d
I2C_FUNC_SMBUS_WRITE_WORD_DATA_PEC	Common/i2c-dev.h	57;"	d
I2C_FUNC_SMBUS_WRITE_WORD_DATA	Common/i2c-dev.h	67;"	d
I2C_H	Shared/i2c.h	33;"	d
I2C_IO_API_H	Common/i2c-io-api.h	25;"	d
I2C_IO_API_MIN_VERSION	Shared/i2c-io.h	49;"	d
I2C_IO_API_VERSION	Shared/i2c-io.h	40;"	d
I2C_IO_CheckVersion	Common/i2c-io-api.c	/^int I2C_IO_CheckVersion( const I2C_IO_Info_t *info )$/;"	f
I2C_IO_GET_ADC	Shared/i2c-io.h	154;"	d
I2C_IO_GET_GPIO_DIR	Shared/i2c-io.h	123;"	d
I2C_IO_GET_GPIO	Shared/i2c-io.h	84;"	d
I2C_IO_GET_INFO	Shared/i2c-io.h	58;"	d
I2C_IO_GetADC	Common/i2c-io-api.c	/^int I2C_IO_GetADC( int i2cDev, uint8_t mux, uint16_t *adcVal )$/;"	f
I2C_IO_GetGPIODir	Common/i2c-io-api.c	/^int I2C_IO_GetGPIODir( int i2cDev, uint8_t portNum, uint8_t *pinVal )$/;"	f
I2C_IO_GetGPIO	Common/i2c-io-api.c	/^int I2C_IO_GetGPIO( int i2cDev, uint8_t portNum, uint8_t *pinVal )$/;"	f
I2C_IO_GetInfo	Common/i2c-io-api.c	/^int I2C_IO_GetInfo( int i2cDev, I2C_IO_Info_t *info )$/;"	f
I2C_IO_Get_ADC_t	Shared/i2c-io.h	/^} I2C_IO_Get_ADC_t;$/;"	t	typeref:struct:__anon31
I2C_IO_Get_GPIO_t	Shared/i2c-io.h	/^} I2C_IO_Get_GPIO_t;$/;"	t	typeref:struct:__anon29
I2C_IO_H	Shared/i2c-io.h	25;"	d
I2C_IO_Info_t	Shared/i2c-io.h	/^} I2C_IO_Info_t;$/;"	t	typeref:struct:__anon28
I2C_IO_READ_REG_16	Shared/i2c-io.h	184;"	d
I2C_IO_READ_REG_8	Shared/i2c-io.h	169;"	d
I2C_IO_ReadReg16_t	Shared/i2c-io.h	/^} I2C_IO_ReadReg16_t;$/;"	t	typeref:struct:__anon33
I2C_IO_ReadReg16	Common/i2c-io-api.c	/^int I2C_IO_ReadReg16( int i2cDev, uint8_t reg, uint16_t *regVal )$/;"	f
I2C_IO_ReadReg8_t	Shared/i2c-io.h	/^} I2C_IO_ReadReg8_t;$/;"	t	typeref:struct:__anon32
I2C_IO_ReadReg8	Common/i2c-io-api.c	/^int I2C_IO_ReadReg8( int i2cDev, uint8_t reg, uint8_t *regVal )$/;"	f
I2C_IO_SET_GPIO_DIR	Shared/i2c-io.h	135;"	d
I2C_IO_SET_GPIO	Shared/i2c-io.h	105;"	d
I2C_IO_SetGPIODir	Common/i2c-io-api.c	/^int I2C_IO_SetGPIODir( int i2cDev, uint8_t portNum, uint8_t pinMask, uint8_t pinVal )$/;"	f
I2C_IO_SetGPIO	Common/i2c-io-api.c	/^int I2C_IO_SetGPIO( int i2cDev, uint8_t portNum, uint8_t pinMask, uint8_t pinVal )$/;"	f
I2C_IO_Set_GPIO_t	Shared/i2c-io.h	/^} I2C_IO_Set_GPIO_t;$/;"	t	typeref:struct:__anon30
I2C_IO_WRITE_REG_16	Shared/i2c-io.h	213;"	d
I2C_IO_WRITE_REG_8	Shared/i2c-io.h	198;"	d
I2C_IO_WriteReg16_t	Shared/i2c-io.h	/^} I2C_IO_WriteReg16_t;$/;"	t	typeref:struct:__anon35
I2C_IO_WriteReg16	Common/i2c-io-api.c	/^int I2C_IO_WriteReg16( int i2cDev, uint8_t reg, uint16_t regVal )$/;"	f
I2C_IO_WriteReg8_t	Shared/i2c-io.h	/^} I2C_IO_WriteReg8_t;$/;"	t	typeref:struct:__anon34
I2C_IO_WriteReg8	Common/i2c-io-api.c	/^int I2C_IO_WriteReg8( int i2cDev, uint8_t reg, uint8_t regVal )$/;"	f
I2C_MAX_DATA_LEN	Shared/i2c.h	69;"	d
I2C_M_IGNORE_NAK	Common/i2c-dev.h	44;"	d
I2C_M_NOSTART	Common/i2c-dev.h	42;"	d
I2C_M_NO_RD_ACK	Common/i2c-dev.h	45;"	d
I2C_M_RD	Common/i2c-dev.h	41;"	d
I2C_M_REV_DIR_ADDR	Common/i2c-dev.h	43;"	d
I2C_M_TEN	Common/i2c-dev.h	40;"	d
I2C_NO_CRC	Common/i2c-api.h	35;"	d
I2C_PEC	Common/i2c-dev.h	167;"	d
I2C_RDWR	Common/i2c-dev.h	166;"	d
I2C_RETRIES	Common/i2c-dev.h	150;"	d
I2C_SLAVE_FORCE	Common/i2c-dev.h	159;"	d
I2C_SLAVE	Common/i2c-dev.h	157;"	d
I2C_SMBUS_BLOCK_DATA_PEC	Common/i2c-dev.h	138;"	d
I2C_SMBUS_BLOCK_DATA	Common/i2c-dev.h	135;"	d
I2C_SMBUS_BLOCK_MAX	Common/i2c-dev.h	114;"	d
I2C_SMBUS_BLOCK_PROC_CALL_PEC	Common/i2c-dev.h	140;"	d
I2C_SMBUS_BLOCK_PROC_CALL	Common/i2c-dev.h	137;"	d
I2C_SMBUS_BYTE_DATA	Common/i2c-dev.h	132;"	d
I2C_SMBUS_BYTE	Common/i2c-dev.h	131;"	d
I2C_SMBUS_I2C_BLOCK_DATA	Common/i2c-dev.h	136;"	d
I2C_SMBUS_I2C_BLOCK_MAX	Common/i2c-dev.h	115;"	d
I2C_SMBUS_PROC_CALL_PEC	Common/i2c-dev.h	139;"	d
I2C_SMBUS_PROC_CALL	Common/i2c-dev.h	134;"	d
I2C_SMBUS_QUICK	Common/i2c-dev.h	130;"	d
I2C_SMBUS_READ	Common/i2c-dev.h	125;"	d
I2C_SMBUS_WORD_DATA_PEC	Common/i2c-dev.h	141;"	d
I2C_SMBUS_WORD_DATA	Common/i2c-dev.h	133;"	d
I2C_SMBUS_WRITE	Common/i2c-dev.h	126;"	d
I2C_SMBUS	Common/i2c-dev.h	172;"	d
I2C_TENBIT	Common/i2c-dev.h	163;"	d
I2C_TIMEOUT	Common/i2c-dev.h	153;"	d
I2C_USE_CRC	Common/i2c-api.h	34;"	d
I2cProcessBlock	Common/i2c-api.c	/^int I2cProcessBlock$/;"	f
I2cReadBlock	Common/i2c-api.c	/^int I2cReadBlock$/;"	f
I2cReadByte	Common/i2c-api.c	/^int I2cReadByte$/;"	f
I2cReadBytes	Common/i2c-api.c	/^int I2cReadBytes$/;"	f
I2cReceiveByte	Common/i2c-api.c	/^int I2cReceiveByte$/;"	f
I2cReceiveBytes	Common/i2c-api.c	/^int I2cReceiveBytes$/;"	f
I2cSendByte	Common/i2c-api.c	/^int I2cSendByte$/;"	f
I2cSendBytes	Common/i2c-api.c	/^int I2cSendBytes$/;"	f
I2cSetSlaveAddress	Common/i2c-api.c	/^void I2cSetSlaveAddress( int i2cDev, I2C_Addr_t i2cAddr, int useCrc )$/;"	f
I2cTransfer	Common/i2c-api.c	/^int I2cTransfer$/;"	f
I2cWriteBlock	Common/i2c-api.c	/^int I2cWriteBlock$/;"	f
I2cWriteByte	Common/i2c-api.c	/^int I2cWriteByte$/;"	f
I2cWriteBytes	Common/i2c-api.c	/^int I2cWriteBytes$/;"	f
InitPosOrientation	executive.h	/^    int InitPosOrientation;$/;"	m	class:ExecutiveProcessor
InitPosOrientation	executive.h	/^const int InitPosOrientation = 90;$/;"	v
InitPosX	executive.h	/^    int InitPosX;$/;"	m	class:ExecutiveProcessor
InitPosX	executive.h	/^const int InitPosX = 280;$/;"	v
InitPosY	executive.h	/^    int InitPosY;$/;"	m	class:ExecutiveProcessor
InitPosY	executive.h	/^const int InitPosY = 185;$/;"	v
IsOptionClear	Shared/StrPrintf.c	91;"	d	file:
IsOptionSet	Shared/StrPrintf.c	90;"	d	file:
LCD_BUSY	Shared/lcd-hal.h	68;"	d
LCD_BlinkCursor	Shared/lcd-api.c	/^void LCD_BlinkCursor( int onOff )$/;"	f
LCD_CGRAM	Shared/lcd-hal.h	60;"	d
LCD_CLR	Shared/lcd-hal.h	38;"	d
LCD_Clear	Shared/lcd-api.c	/^void LCD_Clear( void )$/;"	f
LCD_DDRAM	Shared/lcd-hal.h	61;"	d
LCD_DisplayOff	Shared/lcd-api.c	/^void LCD_DisplayOff( void )$/;"	f
LCD_DisplayOn	Shared/lcd-api.c	/^void LCD_DisplayOn( void )$/;"	f
LCD_ENTRY_INC	Shared/lcd-hal.h	42;"	d
LCD_ENTRY_MODE	Shared/lcd-hal.h	41;"	d
LCD_ENTRY_SHIFT	Shared/lcd-hal.h	43;"	d
LCD_FUNCTION_10DOTS	Shared/lcd-hal.h	57;"	d
LCD_FUNCTION_2LINES	Shared/lcd-hal.h	56;"	d
LCD_FUNCTION_8BIT	Shared/lcd-hal.h	55;"	d
LCD_FUNCTION_RESET	Shared/lcd-hal.h	58;"	d
LCD_FUNCTION	Shared/lcd-hal.h	54;"	d
LCD_HAL_H	Shared/lcd-hal.h	24;"	d
LCD_HOME	Shared/lcd-hal.h	39;"	d
LCD_H	Shared/lcd.h	25;"	d
LCD_HideCursor	Shared/lcd-api.c	/^void LCD_HideCursor( void )$/;"	f
LCD_Init	Shared/lcd-api.c	/^void LCD_Init( uint8_t numLines, uint8_t numCols )$/;"	f
LCD_MOVE_DISP	Shared/lcd-hal.h	51;"	d
LCD_MOVE_RIGHT	Shared/lcd-hal.h	52;"	d
LCD_MOVE	Shared/lcd-hal.h	50;"	d
LCD_MoveTo	Shared/lcd-api.c	/^void LCD_MoveTo( unsigned x, unsigned y )$/;"	f
LCD_NumCols	Shared/lcd-api.c	/^uint8_t LCD_NumCols( void )$/;"	f
LCD_NumLines	Shared/lcd-api.c	/^uint8_t LCD_NumLines( void )$/;"	f
LCD_ON_BLINK	Shared/lcd-hal.h	48;"	d
LCD_ON_CTRL	Shared/lcd-hal.h	45;"	d
LCD_ON_CURSOR	Shared/lcd-hal.h	47;"	d
LCD_ON_DISPLAY	Shared/lcd-hal.h	46;"	d
LCD_Printf_P	Shared/lcd.h	78;"	d
LCD_Printf_P	Shared/lcd-printf.c	/^void LCD_Printf_P( const prog_char *fmt, ... )$/;"	f
LCD_Printf	Shared/lcd.h	70;"	d
LCD_Printf	Shared/lcd-printf.c	/^void LCD_Printf( const char *fmt, ... )$/;"	f
LCD_PutChar	Shared/lcd-api.c	/^void LCD_PutChar( char ch )$/;"	f
LCD_PutStr_P	Shared/lcd.h	77;"	d
LCD_PutStr_P	Shared/lcd-api.c	/^void LCD_PutStr_P( const prog_char *s )$/;"	f
LCD_PutStr	Shared/lcd.h	69;"	d
LCD_PutStr	Shared/lcd-api.c	/^void LCD_PutStr( const char *s )$/;"	f
LCD_RS_CMD	Shared/lcd-hal.h	63;"	d
LCD_RS_DATA	Shared/lcd-hal.h	64;"	d
LCD_ShowCursor	Shared/lcd-api.c	/^void LCD_ShowCursor( void )$/;"	f
LCD_WriteCommand	Shared/lcd-api.c	/^static inline void LCD_WriteCommand( uint8_t cmd )$/;"	f	file:
LEDM_WAIT	uart-io.cpp	47;"	d	file:
LEFT	msp.h	1;"	d
LEFT	robostix.h	1;"	d
LIB_I2CDEV_H	Common/i2c-dev.h	25;"	d
LINE_WIDTH	Shared/DumpMem.c	51;"	d	file:
LOG_BufferIdx_t	Shared/Log.h	/^typedef uint16_t    LOG_BufferIdx_t;$/;"	t
LOG_BufferIdx_t	Shared/Log.h	/^typedef uint8_t     LOG_BufferIdx_t;$/;"	t
LOG_Buffer_t	Shared/Log.h	/^} LOG_Buffer_t;$/;"	t	typeref:struct:__anon26
LOG_EXTRA_PARAMS_DECL	Shared/Log.h	102;"	d
LOG_EXTRA_PARAMS_DECL	Shared/Log.h	99;"	d
LOG_EXTRA_PARAMS	Shared/Log.h	100;"	d
LOG_EXTRA_PARAMS	Shared/Log.h	103;"	d
LOG_Entry_t	Shared/Log.h	/^} LOG_Entry_t;$/;"	t	typeref:struct:__anon24
LOG_Entry_t	Shared/Log.h	/^} LOG_Entry_t;$/;"	t	typeref:struct:__anon25
LOG_H	Shared/Log.h	30;"	d
LOG_LEVEL_ERROR	Shared/Log.h	181;"	d
LOG_LEVEL_NORMAL	Shared/Log.h	180;"	d
LOG_gBuffer_SIZE	Shared/Log.h	151;"	d
LOG_gBuffer	Shared/Log.c	/^volatile    LOG_Buffer_t    LOG_gBuffer;$/;"	v
LOG	executive.h	56;"	d
LocModel	executive.h	/^const int LocModel = 1;$/;"	v
LogBuf0	Shared/Log.h	108;"	d
LogBuf0	Shared/Log.h	129;"	d
LogBuf1	Shared/Log.h	109;"	d
LogBuf1	Shared/Log.h	130;"	d
LogBuf2	Shared/Log.h	110;"	d
LogBuf2	Shared/Log.h	131;"	d
LogBuf3	Shared/Log.h	113;"	d
LogBuf4	Shared/Log.h	114;"	d
LogBufDump	Shared/Log.c	/^void LogBufDump( void )$/;"	f
LogBuf	Shared/Log.c	46;"	d	file:
LogBuf	Shared/Log.c	/^void LogBuf( const char *fmt, uint8_t arg1, uint8_t arg2 LOG_EXTRA_PARAMS_DECL )$/;"	f
LogDebug	Shared/Log.h	198;"	d
LogError_P	Shared/Log.h	195;"	d
LogError	Shared/Log.c	40;"	d	file:
LogError	Shared/Log.c	44;"	d	file:
LogError	Shared/Log.h	175;"	d
LogError	Shared/Log.h	68;"	d
LogError	Shared/Log.c	/^void LogError$/;"	f
LogFunc_t	Shared/Log.h	/^typedef void (*LogFunc_t)( int logLevel, const char *fmt, va_list args );$/;"	t
LogInit	Shared/Log.c	/^void LogInit( FILE *logFs )$/;"	f
LogToUartFunc	Shared/Log.c	/^static int LogToUartFunc( void *outParm, int ch )$/;"	f	file:
LogVerbose	Shared/Log.h	199;"	d
Log_P	Shared/Log.h	194;"	d
Log	Shared/Log.c	39;"	d	file:
Log	Shared/Log.c	43;"	d	file:
Log	Shared/Log.h	174;"	d
Log	Shared/Log.h	67;"	d
Log	Shared/Log.c	/^void Log$/;"	f
MANUAL_MOVE	executive.h	55;"	d
MAX_DEV	executive.h	/^const int MAX_DEV = 360;$/;"	v
MAX_STEPS	executive.h	/^    int MAX_STEPS;$/;"	m	class:ExecutiveProcessor
MINUS_SIGN	Shared/StrPrintf.c	/^	MINUS_SIGN		= 0x01, \/**< Should we print a minus sign?              *\/$/;"	e	enum:__anon15	file:
MSP	msp.h	/^class MSP : DriverSerial {$/;"	c
MSP	msp.cpp	/^MSP::MSP() {$/;"	f	class:MSP
NO_OPTION	Shared/StrPrintf.c	/^    NO_OPTION       = 0x00, \/**< No options specified.						*\/$/;"	e	enum:__anon15	file:
NoADC	i2c-io.cpp	/^    NoADC,$/;"	e	enum:__anon14	file:
NoADC	uart-io.cpp	/^    NoADC,$/;"	e	enum:__anon8	file:
OPT_BASE_DECIMAL	i2c-io.cpp	/^    OPT_BASE_DECIMAL    = 'd',$/;"	e	enum:__anon9	file:
OPT_BASE_DECIMAL	uart-io.cpp	/^    OPT_BASE_DECIMAL = 'd',$/;"	e	enum:__anon4	file:
OPT_BASE_HEX	i2c-io.cpp	/^    OPT_BASE_HEX        = 'x',$/;"	e	enum:__anon9	file:
OPT_BASE_HEX	uart-io.cpp	/^    OPT_BASE_HEX = 'x',$/;"	e	enum:__anon4	file:
OPT_FIRST_LONG_OPT	i2c-io.cpp	/^    OPT_FIRST_LONG_OPT   = 0x80,$/;"	e	enum:__anon9	file:
OPT_FIRST_LONG_OPT	uart-io.cpp	/^    OPT_FIRST_LONG_OPT = 0x80,$/;"	e	enum:__anon4	file:
OPT_HELP	i2c-io.cpp	/^    OPT_HELP,$/;"	e	enum:__anon9	file:
OPT_HELP	uart-io.cpp	/^    OPT_HELP,$/;"	e	enum:__anon4	file:
OPT_MEM_DEFAULT	i2c-io.cpp	/^    OPT_MEM_DEFAULT     = 0,$/;"	e	enum:__anon9	file:
OPT_MEM_DEFAULT	uart-io.cpp	/^    OPT_MEM_DEFAULT = 0,$/;"	e	enum:__anon4	file:
OPT_VERSION	i2c-io.cpp	/^    OPT_VERSION,$/;"	e	enum:__anon9	file:
OPT_VERSION	uart-io.cpp	/^    OPT_VERSION,$/;"	e	enum:__anon4	file:
OutputChar	Shared/StrPrintf.c	/^static void OutputChar( Parameters *p, int c )$/;"	f	file:
OutputField	Shared/StrPrintf.c	/^static void OutputField( Parameters *p, char *s )$/;"	f	file:
PI	executive.h	/^const double PI = 3.14159265;$/;"	v
PSTR	Shared/Log.c	52;"	d	file:
PSTR	Shared/lcd.h	35;"	d
Parameters	Shared/StrPrintf.c	/^} Parameters;$/;"	t	typeref:struct:__anon16	file:
ParseByte	i2c-io.cpp	/^int ParseByte( const char *byteStr, uint8_t *byte )$/;"	f
ParseError	Common/FILE_Parser.h	/^    void (*ParseError)( void *userData, FILE_LineNum_t lineNum, const char *fmt, va_list args );$/;"	m	struct:FILE_ParserCallback_s
ParsePortPinStr	i2c-io.cpp	/^int ParsePortPinStr( const char *portPinStr, uint8_t *portNum, uint8_t *pin, AllowADC_t allowAdc )$/;"	f
ParseReg	i2c-io.cpp	/^int ParseReg( int i2cDev, const char *regStr, RegMap_t *regFound )$/;"	f
ParseUInt16	i2c-io.cpp	/^int ParseUInt16( const char *str, uint16_t *val16 )$/;"	f
ParsedData	Common/FILE_Data.c	/^int ParsedData( void *userData, FILE_ParsedData_t *parsedData )$/;"	f
ParsedData	Common/FILE_Parser.h	/^    int (*ParsedData)( void *userData, FILE_ParsedData_t *parsedData );$/;"	m	struct:FILE_ParserCallback_s
ProcessGetCommand	i2c-io.cpp	/^uint16_t ProcessGetCommand( int i2cDev, const char *portPinStr )$/;"	f
ProcessGetDirCommand	i2c-io.cpp	/^void ProcessGetDirCommand( int i2cDev, const char *portPinStr )$/;"	f
ProcessInfoCommand	i2c-io.cpp	/^void ProcessInfoCommand( int i2cDev )$/;"	f
ProcessReadRegCommand	i2c-io.cpp	/^void ProcessReadRegCommand( int i2cDev, const char *regStr )$/;"	f
ProcessSetCommand	i2c-io.cpp	/^void ProcessSetCommand( int i2cDev, const char *portPinStr, const char *valStr )$/;"	f
ProcessSetDirCommand	i2c-io.cpp	/^void ProcessSetDirCommand( int i2cDev, const char *portPinStr, const char *valStr )$/;"	f
ProcessWriteRegCommand	i2c-io.cpp	/^void ProcessWriteRegCommand( int i2cDev, const char *regStr, const char *valStr )$/;"	f
REG_IO16	i2c-io.cpp	105;"	d	file:
REG_IO16	uart-io.cpp	113;"	d	file:
REG_IO8	i2c-io.cpp	104;"	d	file:
REG_IO8	uart-io.cpp	112;"	d	file:
REG_MEM16	i2c-io.cpp	107;"	d	file:
REG_MEM16	uart-io.cpp	115;"	d	file:
REG_MEM8	i2c-io.cpp	106;"	d	file:
REG_MEM8	uart-io.cpp	114;"	d	file:
RIGHT_JUSTIFY	Shared/StrPrintf.c	/^	RIGHT_JUSTIFY   = 0x02, \/**< Should field be right justified?           *\/$/;"	e	enum:__anon15	file:
RIGHT	msp.h	2;"	d
RIGHT	robostix.h	2;"	d
RegMap_t	i2c-io.cpp	/^} RegMap_t;$/;"	t	typeref:struct:__anon12	file:
RegMap_t	uart-io.cpp	/^} RegMap_t;$/;"	t	typeref:struct:__anon6	file:
Regs_t	i2c-io.cpp	/^} Regs_t;$/;"	t	typeref:struct:__anon13	file:
Regs_t	uart-io.cpp	/^} Regs_t;$/;"	t	typeref:struct:__anon7	file:
Robostix	robostix.h	/^class Robostix : DriverSerial$/;"	c
Robostix	robostix.cpp	/^Robostix::Robostix() {$/;"	f	class:Robostix
SERIALLOG_H	Common/SerialLog.h	30;"	d
SERIAL_LOG_BTUART	Common/SerialLog.h	39;"	d
SERIAL_LOG_COLORIZE	Common/SerialLog.h	44;"	d
SERIAL_LOG_FFUART	Common/SerialLog.h	38;"	d
SERIAL_LOG_HWUART	Common/SerialLog.h	41;"	d
SERIAL_LOG_NO_COLOR	Common/SerialLog.h	43;"	d
SERIAL_LOG_STUART	Common/SerialLog.h	40;"	d
STEP_SIZE	executive.h	/^const int STEP_SIZE = 250000;$/;"	v
STR_H	Shared/Str.h	34;"	d
SVN_REVISION	svn-version.h	5;"	d
SetLogFunc	Shared/Log.c	/^void SetLogFunc( LogFunc_t logFunc )$/;"	f
SetOption	Shared/StrPrintf.c	92;"	d	file:
StartSegment	Common/FILE_Data.c	/^int StartSegment( void *userData, FILE_Addr_t addr )$/;"	f
StartSegment	Common/FILE_Parser.h	/^    int (*StartSegment)( void *userData, FILE_Addr_t addr );$/;"	m	struct:FILE_ParserCallback_s
StrPrintfFunc	Shared/StrPrintf.c	/^static int StrPrintfFunc( void *outParm, int ch )$/;"	f	file:
StrPrintfParms	Shared/StrPrintf.c	/^} StrPrintfParms;$/;"	t	typeref:struct:__anon17	file:
StrPrintf	Shared/Str.h	74;"	d
StrPrintf	Shared/StrPrintf.c	44;"	d	file:
StrPrintf	Shared/StrPrintf.c	50;"	d	file:
StrPrintf	Shared/StrPrintf.c	/^int StrPrintf( char *outStr, int maxLen, const char *fmt, ... )$/;"	f
StrXPrintfFunc	Shared/Str.h	/^typedef int (*StrXPrintfFunc)( void *outParm, int ch );$/;"	t
StrXPrintf	Shared/Str.h	77;"	d
StrXPrintf	Shared/StrPrintf.c	47;"	d	file:
StrXPrintf	Shared/StrPrintf.c	53;"	d	file:
StrXPrintf	Shared/StrPrintf.c	/^int StrXPrintf( StrXPrintfFunc outFunc, void *outParm, const prog_char *fmt, ... )$/;"	f
TRUE	Common/BootLoader-api.c	42;"	d	file:
TRUE	Common/i2c-io-api.c	37;"	d	file:
TRUE	i2c-io.cpp	339;"	d	file:
TRUE	uart-io.cpp	159;"	d	file:
UART_WAIT	msp.cpp	21;"	d	file:
UART_WAIT	uart-io.cpp	46;"	d	file:
Usage	i2c-io.cpp	/^void Usage( void )$/;"	f
ZERO_PAD	Shared/StrPrintf.c	/^	ZERO_PAD        = 0x04, \/**< Should field be zero padded?               *\/$/;"	e	enum:__anon15	file:
_DRIVER_SERIAL_H_	driverSerial.h	2;"	d
_IRMA2_EXECUTIVE_H_	executive.h	31;"	d
address	Common/FILE_Data.h	/^    FILE_Addr_t     address;        \/\/\/< Address of the first byte of this block$/;"	m	struct:FILE_Block_s
addr	Common/FILE_Parser.h	/^    FILE_Addr_t         addr;       \/\/\/< Address that was parsed.$/;"	m	struct:__anon1
addr	Common/i2c-dev.h	/^	__u16 addr;	\/* slave address			*\/$/;"	m	struct:i2c_msg
addr	Shared/BootLoader.h	/^    BL_Addr_t   addr;$/;"	m	struct:__anon20
addr	Shared/BootLoader.h	/^    BL_Addr_t   addr;$/;"	m	struct:__anon21
adjust_constant	executive.cpp	/^void ExecutiveProcessor::adjust_constant(int *tempX, int *tempY) {$/;"	f	class:ExecutiveProcessor
adjust_interpolated	executive.cpp	/^void ExecutiveProcessor::adjust_interpolated(int *tempX, int *tempY, int orientation) {$/;"	f	class:ExecutiveProcessor
blockLen	Common/FILE_Data.h	/^    FILE_BlockLen_t blockLen;       \/\/\/< Number of bytes of data in this block$/;"	m	struct:FILE_Block_s
block	Common/i2c-dev.h	/^	__u8 block[I2C_SMBUS_BLOCK_MAX + 3]; \/* block[0] is used for length *\/$/;"	m	union:i2c_smbus_data
bootDelay	Shared/BootLoader.h	/^    uint8_t     bootDelay;      \/\/\/< # seconds to wait for boot command$/;"	m	struct:__anon22
buf	Common/i2c-dev.h	/^	char *buf;		\/* pointer to msg data			*\/$/;"	m	struct:i2c_msg
byte	Common/i2c-dev.h	/^	__u8 byte;$/;"	m	union:i2c_smbus_data
byte	Shared/BootLoader.h	/^    uint8_t     byte[ 4 ];$/;"	m	union:__anon18
callMapper	executive.cpp	/^void ExecutiveProcessor::callMapper() {$/;"	f	class:ExecutiveProcessor
char	Shared/Log.c	48;"	d	file:
cleanup	executive.cpp	/^int ExecutiveProcessor::cleanup() {$/;"	f	class:ExecutiveProcessor
clientdummy	clientdummy.h	/^class clientdummy {$/;"	c
clientdummy	clientdummy.cpp	/^clientdummy::clientdummy() {$/;"	f	class:clientdummy
clientdummy	clientdummy.cpp	/^clientdummy::clientdummy(const clientdummy& orig) {$/;"	f	class:clientdummy
cmdStr	i2c-io.cpp	/^    const char *cmdStr;$/;"	m	struct:__anon11	file:
cmdStr	uart-io.cpp	/^    const char *cmdStr;$/;"	m	struct:cmdmap	file:
cmdmap	uart-io.cpp	/^struct cmdmap {$/;"	s	file:
cmd	i2c-io.cpp	/^    int         cmd;$/;"	m	struct:__anon11	file:
cmd	uart-io.cpp	/^    int cmd;$/;"	m	struct:cmdmap	file:
command	Common/i2c-dev.h	/^	__u8 command;$/;"	m	struct:i2c_smbus_ioctl_data
correction_mode	executive.h	/^    int correction_mode; \/\/1 interpolation, 2 constant$/;"	m	class:ExecutiveProcessor
current_X	executive.h	/^    int current_X;$/;"	m	class:ExecutiveProcessor
current_Y	executive.h	/^    int current_Y;$/;"	m	class:ExecutiveProcessor
current_orientation	executive.h	/^    int current_orientation;$/;"	m	class:ExecutiveProcessor
dataAlloc	Common/FILE_Parser.h	/^    FILE_ParsedLen_t    dataAlloc;  \/\/\/< Number of bytes allocated.$/;"	m	struct:__anon1
dataLen	Common/FILE_Parser.h	/^    FILE_ParsedLen_t    dataLen;    \/\/\/< Number of bytes of data.$/;"	m	struct:__anon1
data	Common/FILE_Data.h	/^    uint8_t        *data;           \/\/\/< Data in the block.$/;"	m	struct:FILE_Block_s
data	Common/FILE_Parser.h	/^    uint8_t            *data;       \/\/\/< Data that was parsed.$/;"	m	struct:__anon1
data	Common/i2c-dev.h	/^	union i2c_smbus_data *data;$/;"	m	struct:i2c_smbus_ioctl_data	typeref:union:i2c_smbus_ioctl_data::i2c_smbus_data
data	Shared/BootLoader.h	/^    uint8_t     data[ BL_MAX_DATA_BYTES ];$/;"	m	struct:__anon21
deltaXtotal	executive.h	/^    int deltaXtotal, deltaYtotal;$/;"	m	class:ExecutiveProcessor
deltaYtotal	executive.h	/^    int deltaXtotal, deltaYtotal;$/;"	m	class:ExecutiveProcessor
devAddr	Shared/BootLoader.h	/^    I2C_Addr_t  devAddr;        \/\/\/< The i2c address of the device.$/;"	m	struct:__anon19
dt	executive.cpp	/^float dt = 0.001;$/;"	v
editedStringLen	Shared/StrPrintf.c	/^   short          editedStringLen;$/;"	m	struct:__anon16	file:
eepromSize	Shared/BootLoader.h	/^    uint16_t    eepromSize;     \/\/\/< Size of the EEPROM, in bytes.$/;"	m	struct:__anon19
encoder	arduino.cpp	/^int Arduino::encoder(int channel) {$/;"	f	class:Arduino
encoder	clientdummy.cpp	/^int clientdummy::encoder(int channel)$/;"	f	class:clientdummy
encoder	driverSerial.cpp	/^int DriverSerial::encoder(int channel) {}$/;"	f	class:DriverSerial
encoder	msp.cpp	/^int MSP::encoder(int channel) {$/;"	f	class:MSP
encoder	robostix.cpp	/^int Robostix::encoder(int channel) {$/;"	f	class:Robostix
fileName	Common/FILE_Data.h	/^    char           *fileName;       \/\/\/< Name of the file the data came from$/;"	m	struct:__anon3
flags	Common/i2c-dev.h	/^	unsigned short flags;		$/;"	m	struct:i2c_msg
flashSize	Shared/BootLoader.h	/^    uint32_t    flashSize;      \/\/\/< Size of the flash, in bytes.$/;"	m	struct:__anon19
fmt	Shared/Log.h	/^    const char         *fmt;$/;"	m	struct:__anon25
fmt	Shared/Log.h	/^    const prog_char    *fmt;$/;"	m	struct:__anon24
fout	executive.h	/^    std::ofstream fout; \/\/ARCHIVO DE SALIDA PARA ANALISIS$/;"	m	class:ExecutiveProcessor
free_steps	executive.h	/^    bool free_steps;$/;"	m	class:ExecutiveProcessor
gAvrInfo	Common/AvrInfo.c	/^static const AvrInfo_t gAvrInfo[] =$/;"	v	file:
gAvrInfo	Shared/AvrInfo.c	/^static const AvrInfo_t gAvrInfo[] =$/;"	v	file:
gBase	i2c-io.cpp	/^int         gBase       = OPT_BASE_HEX;$/;"	v
gCmdMap	i2c-io.cpp	/^} gCmdMap[] =$/;"	v	typeref:struct:__anon11
gCmdMap	uart-io.cpp	/^} gCmdMap[] = {$/;"	v	typeref:struct:cmdmap
gCmdRExp	uart-io.cpp	/^regex_t gCmdRExp;$/;"	v
gCmdStr	i2c-io.cpp	/^const char *gCmdStr;$/;"	v
gCmdStr	uart-io.cpp	/^const char *gCmdStr;$/;"	v
gCmd	i2c-io.cpp	/^int         gCmd        = CMD_DEFAULT;$/;"	v
gCmd	uart-io.cpp	/^int gCmd = CMD_DEFAULT;$/;"	v
gDebug	Shared/Log.c	/^int gDebug = 0;$/;"	v
gI2cAddr	Common/i2c-api.c	/^static  I2C_Addr_t  gI2cAddr;$/;"	v	file:
gI2cAddr	i2c-io.cpp	/^int gI2cAddr    = -1;$/;"	v
gI2cAddr	uart-io.cpp	/^int gI2cAddr = -1;$/;"	v
gLogFs	Shared/Log.c	/^FILE   *gLogFs = NULL;$/;"	v
gLogFunc	Shared/Log.c	/^static LogFunc_t    gLogFunc = DefaultLogFunc;$/;"	v	file:
gNumAvrInfoEntries	Common/AvrInfo.c	/^static const unsigned gNumAvrInfoEntries = sizeof( gAvrInfo ) \/ sizeof( gAvrInfo[ 0 ]);$/;"	v	file:
gNumAvrInfoEntries	Shared/AvrInfo.c	/^static const unsigned gNumAvrInfoEntries = sizeof( gAvrInfo ) \/ sizeof( gAvrInfo[ 0 ]);$/;"	v	file:
gNumCmds	i2c-io.cpp	/^int gNumCmds = sizeof( gCmdMap ) \/ sizeof( gCmdMap[ 0 ]);$/;"	v
gNumCmds	uart-io.cpp	/^int gNumCmds = sizeof ( gCmdMap) \/ sizeof ( gCmdMap[ 0 ]);$/;"	v
gNumCols	Shared/lcd-api.c	/^static  uint8_t gNumCols;$/;"	v	file:
gNumLines	Shared/lcd-api.c	/^static  uint8_t gNumLines;$/;"	v	file:
gOption	i2c-io.cpp	/^struct option gOption[] =$/;"	v	typeref:struct:option
gOption	uart-io.cpp	/^struct option gOption[] = {$/;"	v	typeref:struct:option
gPortPinStr	i2c-io.cpp	/^const char *gPortPinStr = NULL;$/;"	v
gPortPinStr	uart-io.cpp	/^const char *gPortPinStr = NULL;$/;"	v
gQuiet	Shared/Log.c	/^int gQuiet = 0;$/;"	v
gRegMapATMega128	i2c-io.cpp	/^RegMap_t gRegMapATMega128[] =$/;"	v
gRegMapATMega8	i2c-io.cpp	/^RegMap_t gRegMapATMega8[] =$/;"	v
gRegStr	i2c-io.cpp	/^const char *gRegStr     = NULL;$/;"	v
gRegStr	uart-io.cpp	/^const char *gRegStr = NULL;$/;"	v
gRegs	i2c-io.cpp	/^Regs_t  gRegs[] =$/;"	v
gUseCrc	Common/i2c-api.c	/^static  int         gUseCrc;$/;"	v	file:
gValStr	i2c-io.cpp	/^const char *gValStr     = NULL;$/;"	v
gValStr	uart-io.cpp	/^const char *gValStr = NULL;$/;"	v
gVerbose	Shared/Log.c	/^int gVerbose = 0;$/;"	v
gX	Shared/lcd-api.c	/^static  uint8_t gX;$/;"	v	file:
gY	Shared/lcd-api.c	/^static  uint8_t gY;$/;"	v	file:
getCoordinate	executive.cpp	/^void ExecutiveProcessor::getCoordinate(int *x, int *y) {$/;"	f	class:ExecutiveProcessor
getEncoderState	executive.cpp	/^void ExecutiveProcessor::getEncoderState() {$/;"	f	class:ExecutiveProcessor
getGPSPosition	executive.cpp	/^void ExecutiveProcessor::getGPSPosition() {$/;"	f	class:ExecutiveProcessor
getLVel	executive.cpp	/^float getLVel(float speed, float steering) {$/;"	f
getLaserReading	executive.cpp	/^void ExecutiveProcessor::getLaserReading(ExecutiveData *pExecutive, LaserData *pLaser, int estado, int vr, int vl) {$/;"	f	class:ExecutiveProcessor
getNormalized	executive.cpp	/^float ExecutiveProcessor::getNormalized(float f) {$/;"	f	class:ExecutiveProcessor
getRVel	executive.cpp	/^float getRVel(float speed, float steering) {$/;"	f
getSensorReadings	executive.cpp	/^void ExecutiveProcessor::getSensorReadings(ExecutiveData *pExecutive) {$/;"	f	class:ExecutiveProcessor
giro	arduino.cpp	/^float Arduino::giro() {$/;"	f	class:Arduino
giro	clientdummy.cpp	/^float clientdummy::giro(){$/;"	f	class:clientdummy
giro	driverSerial.cpp	/^float DriverSerial::giro() {}$/;"	f	class:DriverSerial
giro	msp.cpp	/^float MSP::giro() {$/;"	f	class:MSP
giro	robostix.cpp	/^float Robostix::giro() {$/;"	f	class:Robostix
head	Common/FILE_Data.h	/^    FILE_Block_t   *head;           \/\/\/< Pointer to the first block of data$/;"	m	struct:__anon3
i2cAddr	Shared/BootLoader.h	/^    uint8_t     i2cAddr;        \/\/\/< i2c address (in lower 7 bits format)$/;"	m	struct:__anon22
i2cDev	robostix.h	/^        int i2cDev;$/;"	m	class:Robostix
i2c_linus	i2c-io.cpp	/^uint16_t i2c_linus( char gCmdStr[], char gPortPinStr[], int gVal, char gRegStr[], int i2cDev )$/;"	f
i2c_msg	Common/i2c-dev.h	/^struct i2c_msg {$/;"	s
i2c_rdwr_ioctl_data	Common/i2c-dev.h	/^struct i2c_rdwr_ioctl_data {$/;"	s
i2c_smbus_access	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_access(int file, char read_write, __u8 command, $/;"	f
i2c_smbus_block_process_call	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_block_process_call(int file, __u8 command,$/;"	f
i2c_smbus_data	Common/i2c-dev.h	/^union i2c_smbus_data {$/;"	u
i2c_smbus_ioctl_data	Common/i2c-dev.h	/^struct i2c_smbus_ioctl_data {$/;"	s
i2c_smbus_process_call	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_process_call(int file, __u8 command, __u16 value)$/;"	f
i2c_smbus_read_block_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_read_block_data(int file, __u8 command, $/;"	f
i2c_smbus_read_byte_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte_data(int file, __u8 command)$/;"	f
i2c_smbus_read_byte	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte(int file)$/;"	f
i2c_smbus_read_i2c_block_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_read_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_read_word_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_read_word_data(int file, __u8 command)$/;"	f
i2c_smbus_write_block_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_block_data(int file, __u8 command, $/;"	f
i2c_smbus_write_byte_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte_data(int file, __u8 command, $/;"	f
i2c_smbus_write_byte	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte(int file, __u8 value)$/;"	f
i2c_smbus_write_i2c_block_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_write_quick	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_quick(int file, __u8 value)$/;"	f
i2c_smbus_write_word_data	Common/i2c-dev.h	/^static inline __s32 i2c_smbus_write_word_data(int file, __u8 command, $/;"	f
init	clientdummy.cpp	/^void clientdummy::init() {$/;"	f	class:clientdummy
init	executive.cpp	/^int ExecutiveProcessor::init() {$/;"	f	class:ExecutiveProcessor
is16Bit	i2c-io.cpp	/^    uint8_t     is16Bit;$/;"	m	struct:__anon12	file:
is16Bit	uart-io.cpp	/^    uint8_t is16Bit;$/;"	m	struct:__anon6	file:
lcdPrintfFunc	Shared/lcd-printf.c	/^static int lcdPrintfFunc( void *outParm, int ch )$/;"	f	file:
leadingZeros	Shared/StrPrintf.c	/^   short          leadingZeros;$/;"	m	struct:__anon16	file:
leftEncoderPS	executive.h	/^    int leftEncoderPS;$/;"	m	class:ExecutiveProcessor
leftEncoder	executive.h	/^    int leftEncoder;$/;"	m	class:ExecutiveProcessor
leftWheelCounter	executive.h	/^    int leftWheelCounter;$/;"	m	class:ExecutiveProcessor
len	Common/i2c-dev.h	/^	short len;		\/* msg length				*\/$/;"	m	struct:i2c_msg
len	Shared/BootLoader.h	/^    uint8_t     len;$/;"	m	struct:__anon20
lineNum	Common/FILE_Parser.h	/^    FILE_LineNum_t      lineNum;    \/\/\/< Line number of data record in ASCII file.$/;"	m	struct:__anon1
loadLSQmodels	executive.cpp	/^void ExecutiveProcessor::loadLSQmodels() {$/;"	f	class:ExecutiveProcessor
loadSplineModel	executive.cpp	/^void ExecutiveProcessor::loadSplineModel() {$/;"	f	class:ExecutiveProcessor
localizationLSQ	executive.cpp	/^void ExecutiveProcessor::localizationLSQ(float sp, float st, int model) {$/;"	f	class:ExecutiveProcessor
localizationSpline	executive.cpp	/^void ExecutiveProcessor::localizationSpline(float sp, float st) {$/;"	f	class:ExecutiveProcessor
localization	executive.cpp	/^void ExecutiveProcessor::localization(float delta[]) {$/;"	f	class:ExecutiveProcessor
m_bootSize	Common/AvrInfo.h	/^    uint16_t    m_bootSize;     \/\/\/< Max size of bootloader area.$/;"	m	struct:__anon2
m_bootSize	Shared/AvrInfo.h	/^    uint16_t    m_bootSize;     \/\/\/< Max size of bootloader area.$/;"	m	struct:__anon27
m_crc	Shared/i2c.h	/^    uint8_t     m_crc;$/;"	m	struct:__anon36
m_data	Shared/i2c.h	/^    uint8_t     m_data[ I2C_MAX_DATA_LEN  + 2]; \/\/ +1 for the command, +1 for length$/;"	m	struct:__anon36
m_eepromSize	Common/AvrInfo.h	/^    uint16_t    m_eepromSize;   \/\/\/< Size of the EEPROM area (in bytes)$/;"	m	struct:__anon2
m_entry	Shared/Log.h	/^    LOG_Entry_t     m_entry[ CFG_LOG_NUM_BUFFER_ENTRIES ];$/;"	m	struct:__anon26
m_flashSize	Common/AvrInfo.h	/^    uint32_t    m_flashSize;    \/\/\/< Size of the flash (in bytes)$/;"	m	struct:__anon2
m_flashSize	Shared/AvrInfo.h	/^    uint32_t    m_flashSize;    \/\/\/< Size of the flash (in bytes)$/;"	m	struct:__anon27
m_getIdx	Shared/Log.h	/^    LOG_BufferIdx_t m_getIdx;$/;"	m	struct:__anon26
m_len	Shared/i2c.h	/^    uint8_t     m_len;$/;"	m	struct:__anon36
m_pageAddress	Shared/BootLoader.h	/^    uint32_t    m_pageAddress;      \/\/\/< Address of data currently in page buffer$/;"	m	struct:__anon23
m_pageBuf	Shared/BootLoader.h	/^    uint8_t     m_pageBuf[ SPM_PAGESIZE ];$/;"	m	struct:__anon23
m_pageDirty	Shared/BootLoader.h	/^    uint8_t     m_pageDirty;        \/\/\/< Does the page buffer contain unwritten data?$/;"	m	struct:__anon23
m_pageShift	Common/AvrInfo.h	/^    uint8_t     m_pageShift;    \/\/\/< Page Size = 1 << m_pageShift$/;"	m	struct:__anon2
m_pageShift	Shared/AvrInfo.h	/^    uint8_t     m_pageShift;    \/\/\/< Page Size = 1 << m_pageShift$/;"	m	struct:__anon27
m_pageSize	Common/AvrInfo.h	/^    uint16_t    m_pageSize;     \/\/\/< Page size in bytes (for flash programming)$/;"	m	struct:__anon2
m_pageSize	Shared/AvrInfo.h	/^    uint16_t    m_pageSize;     \/\/\/< Page size in bytes (for flash programming)$/;"	m	struct:__anon27
m_putIdx	Shared/Log.h	/^    LOG_BufferIdx_t m_putIdx;$/;"	m	struct:__anon26
m_signature	Common/AvrInfo.h	/^    uint16_t    m_signature;    \/\/\/< Signature minus the vendor ID$/;"	m	struct:__anon2
m_signature	Shared/AvrInfo.h	/^    uint16_t    m_signature;    \/\/\/< Signature minus the vendor ID$/;"	m	struct:__anon27
m_string	Common/AvrInfo.h	/^    const char *m_string;       \/\/\/< Human readable prt identification$/;"	m	struct:__anon2
m_string	Shared/AvrInfo.h	/^    const char *m_string;       \/\/\/< Human readable prt identification$/;"	m	struct:__anon27
main	executive.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	i2c-adc.cpp	/^int main( int argc, char **argv )$/;"	f
maxLen	Shared/StrPrintf.c	/^   int   maxLen;  \/**< Maximum number of characters which can be stored.   *\/$/;"	m	struct:__anon17	file:
minFieldWidth	Shared/StrPrintf.c	/^   short          minFieldWidth;    $/;"	m	struct:__anon16	file:
minVersion	Shared/BootLoader.h	/^    uint8_t     minVersion;     \/\/\/< Minimum API version the device is compatible with.$/;"	m	struct:__anon19
minVersion	Shared/i2c-io.h	/^    uint8_t     minVersion;$/;"	m	struct:__anon28
modelo1	executive.h	/^    float modelo4[3][15], modelo3[3][10], modelo2[3][6], modelo1[3][3];$/;"	m	class:ExecutiveProcessor
modelo2	executive.h	/^    float modelo4[3][15], modelo3[3][10], modelo2[3][6], modelo1[3][3];$/;"	m	class:ExecutiveProcessor
modelo3	executive.h	/^    float modelo4[3][15], modelo3[3][10], modelo2[3][6], modelo1[3][3];$/;"	m	class:ExecutiveProcessor
modelo4	executive.h	/^    float modelo4[3][15], modelo3[3][10], modelo2[3][6], modelo1[3][3];$/;"	m	class:ExecutiveProcessor
modeloSpline	executive.h	/^    float modeloSpline[61][61][3];$/;"	m	class:ExecutiveProcessor
move_lrn	driverSerial.cpp	/^void DriverSerial::move_lrn(int seed_percent, int movement) {}$/;"	f	class:DriverSerial
move_lrn	msp.cpp	/^void MSP::move_lrn(int _speed_percent, int _movement){          $/;"	f	class:MSP
move_ready_flag	executive.h	/^    bool move_ready_flag;$/;"	m	class:ExecutiveProcessor
move_test	driverSerial.cpp	/^void DriverSerial::move_test(int _speed_percent,int _movement){}$/;"	f	class:DriverSerial
move_test	msp.cpp	/^void MSP::move_test(float vd,float vi)$/;"	f	class:MSP
move_v	driverSerial.cpp	/^void DriverSerial::move_v(float vd,float vi){}$/;"	f	class:DriverSerial
move_v	msp.cpp	/^void MSP::move_v(float vd,float vi)$/;"	f	class:MSP
move_v	robostix.cpp	/^void Robostix::move_v(float vd, float vi)$/;"	f	class:Robostix
move	arduino.cpp	/^void Arduino::move(float speed, float steering) {$/;"	f	class:Arduino
move	clientdummy.cpp	/^void clientdummy::move(float speed, float steering){$/;"	f	class:clientdummy
move	driverSerial.cpp	/^void DriverSerial::move(float speed, float steering) {}$/;"	f	class:DriverSerial
move	executive.cpp	/^int ExecutiveProcessor::move() {$/;"	f	class:ExecutiveProcessor
move	msp.cpp	/^void MSP::move(float speed, float steering) {$/;"	f	class:MSP
move	robostix.cpp	/^void Robostix::move(float speed, float steering) {$/;"	f	class:Robostix
movement_times	executive.h	/^      int movement_times;$/;"	m	class:ExecutiveProcessor
msgs	Common/i2c-dev.h	/^	struct i2c_msg *msgs;	\/* pointers to i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data	typeref:struct:i2c_rdwr_ioctl_data::i2c_msg
mux	Shared/i2c-io.h	/^    uint8_t mux;$/;"	m	struct:__anon31
name	Shared/BootLoader.h	/^    char        name[ BL_NODE_NAME_LEN ];   \/\/\/< Name of this node (null terminated)$/;"	m	struct:__anon22
next	Common/FILE_Data.h	/^    FILE_Block_t   *next;           \/\/\/< Next block in the chain$/;"	m	struct:FILE_Block_s
nmsgs	Common/i2c-dev.h	/^	int nmsgs;		\/* number of i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data
numOutputChars	Shared/StrPrintf.c	/^   int            numOutputChars;$/;"	m	struct:__anon16	file:
numRegs	i2c-io.cpp	/^    uint16_t    numRegs;$/;"	m	struct:__anon13	file:
numRegs	uart-io.cpp	/^    uint16_t numRegs;$/;"	m	struct:__anon7	file:
num_executed_steps	executive.h	/^    int num_executed_steps;$/;"	m	class:ExecutiveProcessor
options	Shared/StrPrintf.c	/^   FmtOption      options;          $/;"	m	struct:__anon16	file:
orient_steps	executive.h	/^    int orient_steps;$/;"	m	class:ExecutiveProcessor
outFunc	Shared/StrPrintf.c	/^   StrXPrintfFunc outFunc;$/;"	m	struct:__anon16	file:
outParm	Shared/StrPrintf.c	/^   void          *outParm;$/;"	m	struct:__anon16	file:
pExecutive	executive.h	/^    ExecutiveData *pExecutive;$/;"	m	class:ExecutiveProcessor
pLaser	executive.h	/^    LaserData *pLaser;$/;"	m	class:ExecutiveProcessor
pMapper	executive.h	/^    MapperData *pMapper;$/;"	m	class:ExecutiveProcessor
pMonitor	executive.h	/^    MonitorData *pMonitor;$/;"	m	class:ExecutiveProcessor
pNetwork	executive.h	/^    NetworkData *pNetwork;$/;"	m	class:ExecutiveProcessor
pad	Shared/BootLoader.h	/^    uint8_t     pad;            \/\/\/< Reserved - set to zero$/;"	m	struct:__anon22
pad	Shared/BootLoader.h	/^    uint8_t     pad[ 3 ];       \/\/\/< Reserved - set to zero.$/;"	m	struct:__anon19
pad	Shared/BootLoader.h	/^    uint8_t     pad[ 3 ];$/;"	m	struct:__anon20
pad	Shared/i2c-io.h	/^    uint8_t     pad;    \/\/\/< Pad for alignment on the host.$/;"	m	struct:__anon35
param1	Shared/Log.h	/^    uint8_t             param1;$/;"	m	struct:__anon24
param1	Shared/Log.h	/^    uint8_t             param1;$/;"	m	struct:__anon25
param2	Shared/Log.h	/^    uint8_t             param2;$/;"	m	struct:__anon24
param2	Shared/Log.h	/^    uint8_t             param2;$/;"	m	struct:__anon25
param3	Shared/Log.h	/^    uint8_t             param3;$/;"	m	struct:__anon24
param4	Shared/Log.h	/^    uint8_t             param4;$/;"	m	struct:__anon24
partNumber	Shared/BootLoader.h	/^    uint16_t    partNumber;     \/\/\/< Part number (bytes 2 & 3 of signature)$/;"	m	struct:__anon19
pgm_read_byte	Shared/StrPrintf.c	59;"	d	file:
pinMask	Shared/i2c-io.h	/^    uint8_t     pinMask;$/;"	m	struct:__anon30
pinVal	Shared/i2c-io.h	/^    uint8_t     pinVal;$/;"	m	struct:__anon30
portNum	Shared/i2c-io.h	/^    uint8_t     portNum;$/;"	m	struct:__anon29
portNum	Shared/i2c-io.h	/^    uint8_t     portNum;$/;"	m	struct:__anon30
prog_char	Shared/StrPrintf.c	58;"	d	file:
ramSize	Shared/BootLoader.h	/^    uint16_t    ramSize;        \/\/\/< Size of the SRAM area, in bytes.$/;"	m	struct:__anon19
read_write	Common/i2c-dev.h	/^	char read_write;$/;"	m	struct:i2c_smbus_ioctl_data
regMap	i2c-io.cpp	/^    RegMap_t   *regMap;$/;"	m	struct:__anon13	file:
regMap	uart-io.cpp	/^    RegMap_t *regMap;$/;"	m	struct:__anon7	file:
regSize	Shared/BootLoader.h	/^    uint16_t    regSize;        \/\/\/< Size of the register area, in bytes.$/;"	m	struct:__anon19
regStr	i2c-io.cpp	/^    const char *regStr;$/;"	m	struct:__anon12	file:
regStr	uart-io.cpp	/^    const char *regStr;$/;"	m	struct:__anon6	file:
reg	Shared/i2c-io.h	/^    uint8_t     reg;    \/\/\/< Index of the register to be read.$/;"	m	struct:__anon35
reg	Shared/i2c-io.h	/^    uint8_t reg;    \/\/\/< Index of the register to be read.$/;"	m	struct:__anon32
reg	Shared/i2c-io.h	/^    uint8_t reg;    \/\/\/< Index of the register to be read.$/;"	m	struct:__anon33
reg	Shared/i2c-io.h	/^    uint8_t reg;    \/\/\/< Index of the register to be read.$/;"	m	struct:__anon34
reg	i2c-io.cpp	/^    uint8_t     reg;$/;"	m	struct:__anon12	file:
reg	uart-io.cpp	/^    uint8_t reg;$/;"	m	struct:__anon6	file:
re	uart-io.cpp	/^    regex_t re;$/;"	m	struct:cmdmap	file:
rightEncoderPS	executive.h	/^    int rightEncoderPS;$/;"	m	class:ExecutiveProcessor
rightEncoder	executive.h	/^    int rightEncoder;$/;"	m	class:ExecutiveProcessor
rightWheelCounter	executive.h	/^    int rightWheelCounter;$/;"	m	class:ExecutiveProcessor
saveLog	executive.cpp	/^void ExecutiveProcessor::saveLog(string str) {$/;"	f	class:ExecutiveProcessor
sense_adc	i2c-io.cpp	/^float sense_adc (int channel, int i2cDev)$/;"	f
sense_adc	uart-io.cpp	/^float sense_adc(int channel, int uartDev) {$/;"	f
sense_c	i2c-io.cpp	/^int sense_c (int channel, int i2cDev)$/;"	f
sense_giro	uart-io.cpp	/^float sense_giro(int uartDev) {$/;"	f
sense	arduino.cpp	/^float Arduino::sense(int channel) {$/;"	f	class:Arduino
sense	clientdummy.cpp	/^float clientdummy::sense(int channel) {$/;"	f	class:clientdummy
sense	driverSerial.cpp	/^float DriverSerial::sense(int channel) {}$/;"	f	class:DriverSerial
sense	msp.cpp	/^float MSP::sense(int channel) {$/;"	f	class:MSP
sense	robostix.cpp	/^float Robostix::sense(int channel) {$/;"	f	class:Robostix
serial	executive.h	/^    DriverSerial* serial; \/\/ driver comun para comunicacion con microcontroladores$/;"	m	class:ExecutiveProcessor
setLocalTime	executive.cpp	/^void setLocalTime(char *salida) {$/;"	f
setManualMove	executive.cpp	/^void ExecutiveProcessor::setManualMove(bool manual_move) {$/;"	f	class:ExecutiveProcessor
set_M_left_v	uart-io.cpp	/^void set_M_left_v(float gVal, int uartDev) {$/;"	f
set_M_left	i2c-io.cpp	/^void set_M_left (float gVal, int i2cDev)$/;"	f
set_M_left	uart-io.cpp	/^void set_M_left(float gVal, int uartDev) {$/;"	f
set_M_right_v	uart-io.cpp	/^void set_M_right_v(float gVal, int uartDev) {$/;"	f
set_M_right	i2c-io.cpp	/^void set_M_right (float gVal, int i2cDev)$/;"	f
set_M_right	uart-io.cpp	/^void set_M_right(float gVal, int uartDev) {$/;"	f
set_b	uart-io.cpp	/^void set_b(float gVal, int uartDev) {$/;"	f
set_f	uart-io.cpp	/^void set_f(float gVal, int uartDev) {$/;"	f
set_l	uart-io.cpp	/^void set_l(float gVal, int uartDev) {$/;"	f
set_ml	uart-io.cpp	/^void set_ml(float gVal, int uartDev) {$/;"	f
set_mr	uart-io.cpp	/^void set_mr(float gVal, int uartDev) {$/;"	f
set_r	uart-io.cpp	/^void set_r(float gVal, int uartDev) {$/;"	f
signature	i2c-io.cpp	/^    uint16_t    signature;$/;"	m	struct:__anon13	file:
signature	uart-io.cpp	/^    uint16_t signature;$/;"	m	struct:__anon7	file:
size	Common/i2c-dev.h	/^	int size;$/;"	m	struct:i2c_smbus_ioctl_data
socketdata	clientdummy.cpp	/^uint16_t socketdata(const char* gCmdStr, const char* gVal)$/;"	f
sockfd	clientdummy.h	/^    int sockfd;$/;"	m	class:clientdummy
spmPageSize	Shared/BootLoader.h	/^    uint16_t    spmPageSize;    \/\/\/< Size of the SPM Page Size.$/;"	m	struct:__anon19
start_msp	uart-io.cpp	/^int start_msp(const char *uartDevName) {$/;"	f
start_pwm	i2c-io.cpp	/^void start_pwm(int i2cDev)$/;"	f
start_robostix	i2c-io.cpp	/^int start_robostix(const char *i2cDevName)$/;"	f
step	executive.cpp	/^int ExecutiveProcessor::step() {$/;"	f	class:ExecutiveProcessor
stop_msp	uart-io.cpp	/^void stop_msp(int uartDev) {$/;"	f
stop_robostix	i2c-io.cpp	/^void stop_robostix(int i2cDev)$/;"	f
str	Shared/StrPrintf.c	/^   char *str;     \/**< Buffer to store results into.                       *\/$/;"	m	struct:__anon17	file:
structSize	Shared/BootLoader.h	/^    uint8_t     structSize;     \/\/\/< Size of this structure, in bytes.$/;"	m	struct:__anon22
st	executive.cpp	/^struct stat st = {0};$/;"	v	typeref:struct:stat
svnRevision	Shared/i2c-io.h	/^    uint16_t    svnRevision;$/;"	m	struct:__anon28
tail	Common/FILE_Data.h	/^    FILE_Block_t   *tail;           \/\/\/< Pointer to the last block of data$/;"	m	struct:__anon3
temp_movement	executive.h	/^      int temp_movement ;$/;"	m	class:ExecutiveProcessor
temp_speed_percent	executive.h	/^      int temp_speed_percent;$/;"	m	class:ExecutiveProcessor
test	executive.h	/^    int test;$/;"	m	class:ExecutiveProcessor
times	executive.h	/^      int times;$/;"	m	class:ExecutiveProcessor
uartDev	arduino.h	/^    int uartDev;$/;"	m	class:Arduino
uartDev	msp.h	/^    int uartDev;$/;"	m	class:MSP
uartOptionsBkp	uart-io.cpp	/^struct termios uartOptionsBkp;$/;"	v	typeref:struct:termios
uart	uart-io.cpp	/^uint16_t uart(const char* gCmdStr, const char* gVal, int uartDev) {$/;"	f
use_manual_to_move	executive.h	/^    bool use_manual_to_move;$/;"	m	class:ExecutiveProcessor
userData	Common/FILE_Parser.h	/^    void           *userData;   \/\/\/< Passed to callback functions.$/;"	m	struct:FILE_ParserCallback_s
vLogError	Shared/Log.c	/^void vLogError$/;"	f
vLog_P	Shared/Log.h	196;"	d
vLog	Shared/Log.c	41;"	d	file:
vLog	Shared/Log.c	45;"	d	file:
vLog	Shared/Log.h	176;"	d
vLog	Shared/Log.c	/^void vLog$/;"	f
vStrPrintf	Shared/Str.h	75;"	d
vStrPrintf	Shared/StrPrintf.c	45;"	d	file:
vStrPrintf	Shared/StrPrintf.c	51;"	d	file:
vStrPrintf	Shared/StrPrintf.c	/^int vStrPrintf( char *outStr, int maxLen, const prog_char *fmt, va_list args )$/;"	f
vStrXPrintf	Shared/Str.h	78;"	d
vStrXPrintf	Shared/StrPrintf.c	48;"	d	file:
vStrXPrintf	Shared/StrPrintf.c	54;"	d	file:
vStrXPrintf	Shared/StrPrintf.c	/^int vStrXPrintf$/;"	f
val16	Shared/BootLoader.h	/^    uint16_t    val16;$/;"	m	union:__anon18
val32	Shared/BootLoader.h	/^    uint32_t    val32;$/;"	m	union:__anon18
val	Shared/i2c-io.h	/^    uint16_t    val;    \/\/\/< Value to write$/;"	m	struct:__anon35
val	Shared/i2c-io.h	/^    uint8_t val;    \/\/\/< Value to write into the register$/;"	m	struct:__anon34
version	Shared/BootLoader.h	/^    uint8_t     version;        \/\/\/< API Version the device is using.$/;"	m	struct:__anon19
version	Shared/i2c-io.h	/^    uint8_t     version;$/;"	m	struct:__anon28
word	Common/i2c-dev.h	/^	__u16 word;$/;"	m	union:i2c_smbus_data
~Arduino	arduino.cpp	/^Arduino::~Arduino() {$/;"	f	class:Arduino
~DriverSerial	driverSerial.cpp	/^DriverSerial::~DriverSerial() {}$/;"	f	class:DriverSerial
~ExecutiveProcessor	executive.h	/^    ~ExecutiveProcessor() {$/;"	f	class:ExecutiveProcessor
~MSP	msp.cpp	/^MSP::~MSP() {$/;"	f	class:MSP
~Robostix	robostix.cpp	/^Robostix::~Robostix() {$/;"	f	class:Robostix
~clientdummy	clientdummy.cpp	/^clientdummy::~clientdummy() {$/;"	f	class:clientdummy
